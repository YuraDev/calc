@mixin shadow {
    transition: box-shadow ease .2s;
    box-shadow: 0 25px 50px rgba(8,21,66,.06);
    &:hover {
        box-shadow: 0 5px 12px rgba(126,142,177,.2);
    }
};
@mixin clearfix {
    &:before,
    &:after {
        content: '';
        display: table;
    }
    &:after {
        clear: both;
    }
};
/* Block
 -------------------------- */
@mixin block($block) {
    $B: $namespace+'-'+$block !global;
    .#{$B} {
        @content;
    }
}
/* Block
 -------------------------- */

@mixin res ($key, $map: $breakpoints) {
    @if map-has-key($map, $key) {
        $media: inspect(map-get($map, $key));
        @media only screen and #{$media} {
            @content;
        }
    } @else {
        @warn "Undefeined points: `#{$map}`";
    }
}

/* Grid Columns
-------------------------- */
@mixin  make-grid-columns($name: '') {
    $infix: if($name == '', $name, '-#{$name}');
    @for $i from 0 through $grid-columns {
        @include block(col#{$infix}-#{$i}) {
            width: (1 / $grid-columns * $i * 100) * 1%;
            float: left;
            box-sizing: border-box;
            @if $i == 0 {
                display: none;
            }
        }
        @include block(col#{$infix}-offset-#{$i}) {
            margin-left: (1 / $grid-columns * $i * 100) * 1%;
        }
        @include block(col#{$infix}-pull-#{$i}) {
            position: relative;
            right: (1 / $grid-columns * $i * 100) * 1%;
        }
        @include block(col#{$infix}-push-#{$i}) {
            position: relative;
            left: (1 / $grid-columns * $i * 100) * 1%;
        }
    }
}